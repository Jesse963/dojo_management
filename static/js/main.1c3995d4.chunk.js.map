{"version":3,"sources":["components/navbar.jsx","components/NewClassPage/student.jsx","components/NewClassPage/students.jsx","components/AdminPage/NewSudentForm.jsx","components/studentPage/StudentSelectionButton.jsx","components/TrendsPage/classInfoComponent.jsx","components/studentPage/StudentInfo.jsx","components/charting/chart.jsx","components/studentPage/NoteComponent.jsx","components/studentPage/notesForm.jsx","components/studentPage/StudentPerformance.jsx","components/studentPage/StudentDetails.jsx","components/studentPage/StudentSelection.jsx","components/TrendsPage/StudentInfoComponent.jsx","components/AdminPage/AdminPage.jsx","components/TrendsPage/StudentsOverview.jsx","components/charting/classAttendanceGraph.jsx","components/TrendsPage/TrendsPage.jsx","components/StartPage/StartPage.jsx","components/newSchoolPage/newSchoolForm.jsx","components/loginPanel/loginPanel.jsx","App.js","index.js"],"names":["NavBar","className","href","Student","state","selected","handleClick","setState","prevState","props","addStudentToAttending","name","checkStyle","classes","onClick","this","style","width","Component","Students","currentAttendance","students","studentSearchOnChange","event","filter","student","toLowerCase","includes","target","value","currentlyAttending","splice","indexOf","push","console","log","length","submitAttendance","date","a","options","method","headers","body","JSON","stringify","fetch","response","json","success","window","location","Date","display","flexDirection","paddingRight","alignItems","borderRight","onChange","type","id","placeholder","maxHeight","overflow","listStyleType","paddingLeft","textAlign","marginRight","map","i","grade","height","renderDatePicker","NewStudentForm","action","school_id","class","e","preventDefault","StudentSelectionButton","navigateToStudent","ClassInformation","acceptClick","getDay","getDate","getMonth","getFullYear","borderBottom","cursor","clickHandler","maxWidth","attendees","StudentInfo","minWidth","overflowX","overflowY","listStyle","margin","padding","dob","phone","Class","Chart","datasets","backgroundColor","borderColor","data","average","labels","background","marginLeft","plugins","title","text","fontSize","legend","React","NoteComponent","note","dt","month","year","fullDate","formatDate","minHeight","textJustify","content","author","NoteForm","school","border","wrap","rows","columns","StudentPerformance","getNotes","notes","result","reactDom","render","document","querySelector","studentAttendance","averageAttendancePerStudent","toggleNoteSubmissionPanel","StudentDetails","getStudentAttendance","full_name","totalAttendance","studentResponse","fullResponse","fullAttendance","forEach","lesson","totalStudents","attendedClasses","marginTop","StudentSelection","ReactDOM","StudentTrend","displayAttendance","Math","round","attendancePercentage","studentName","checkDisplay","StudentsOverview","undefined","fullAttendanceArray","classList","classKey","classClickHandler","ClassAttendanceGraph","counts","formattedDates","dates","TrendsPage","graphPeriod","componentDidMount","schoolID","allClasses","fullClassList","attendances","loaded","graphData","generateAttendanceGraphDataSet","period","filterDate","setMonth","filteredCount","filteredDates","classDate","reverse","setGraphPeriod","StartPage","isHidden","navigateToNewClass","navigateToTrends","navigateToNewStudent","logOut","cookie","setTimeout","alignSelf","NewSchoolForm","required","minLength","maxLength","LoginPanel","login","createAccount","token","URLSearchParams","search","get","App","getSchool","fetchStudents","resetPassword","params","split","finalSchool","generateContent","then","res","catch","err","Fragment","getElementById"],"mappings":"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","file":"static/js/main.1c3995d4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"/\">\r\n        Dojo Management\r\n        <span className=\"badge badge-pill badge-secondary\"></span>\r\n      </a>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Student extends Component {\r\n  state = { selected: false };\r\n\r\n  handleClick = () => {\r\n    this.setState((prevState) => ({\r\n      selected: !prevState.selected,\r\n    }));\r\n    this.props.addStudentToAttending(this.props.name, this.state.selected);\r\n  };\r\n\r\n  checkStyle = () => {\r\n    let classes = \"btn mt-2 \";\r\n    classes += this.state.selected ? \"btn-success\" : \"btn-outline-dark\";\r\n    return classes;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li>\r\n        <button\r\n          onClick={this.handleClick}\r\n          className={this.checkStyle()}\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          {this.props.name}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Student;\r\n","import React, { Component, useState } from \"react\";\r\nimport Student from \"./student.jsx\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"../core.css\";\r\n\r\nclass Students extends Component {\r\n  state = {\r\n    currentAttendance: [],\r\n    students: this.props.students,\r\n  };\r\n\r\n  studentSearchOnChange = (event) => {\r\n    this.setState({\r\n      students: this.props.students.filter((student) =>\r\n        student.name.toLowerCase().includes(event.target.value)\r\n      ),\r\n    });\r\n  };\r\n\r\n  renderDatePicker() {\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    return (\r\n      <DatePicker\r\n        selected={new Date()}\r\n        // onChange={(date) => this.setState({ StartDate: date })}\r\n      />\r\n    );\r\n  }\r\n\r\n  // add student to attending students array\r\n  addStudentToAttending = (student, selected) => {\r\n    let currentlyAttending = this.state.currentAttendance;\r\n    if (currentlyAttending.includes(student)) {\r\n      currentlyAttending.splice(currentlyAttending.indexOf(student), 1);\r\n    } else {\r\n      currentlyAttending.push(student);\r\n    }\r\n    this.setState({ currentAttendance: currentlyAttending });\r\n    console.log(this.state.currentAttendance.length);\r\n  };\r\n\r\n  submitAttendance = async (date) => {\r\n    console.log(this.state.currentAttendance);\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        students: this.state.currentAttendance,\r\n        date: date,\r\n      }),\r\n    };\r\n    const response = await fetch(\"/api/uploadAttendance\", options);\r\n    const { success } = await response.json();\r\n    if (success) {\r\n      window.location.href = \"/\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"attendance selection page container shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <h1 className=\"m-3 mb-4\">Select Attending Students</h1>\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <div\r\n            className=\"left panel mb-2 mr-5 ml-5\"\r\n            style={{\r\n              width: \"50%\",\r\n              paddingRight: \"5%\",\r\n              alignItems: \"center\",\r\n              borderRight: \"2px dashed black\",\r\n            }}\r\n          >\r\n            <input\r\n              onChange={this.studentSearchOnChange}\r\n              type=\"text\"\r\n              name=\"studentSearch\"\r\n              id=\"studentSearch\"\r\n              className=\"form-control mt-1 mb-3\"\r\n              placeholder=\"Search for a student\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n            <div\r\n              className=\"mapped students\"\r\n              style={{\r\n                maxHeight: \"30vh\",\r\n                overflow: \"auto\",\r\n              }}\r\n            >\r\n              <ul\r\n                style={{\r\n                  listStyleType: \"none\",\r\n                  paddingLeft: \"0px\",\r\n                  textAlign: \"center\",\r\n                  marginRight: \"5px\",\r\n                }}\r\n              >\r\n                {this.state.students.map((student, i) => (\r\n                  <Student\r\n                    key={i}\r\n                    name={student.name}\r\n                    grade={student.grade}\r\n                    addStudentToAttending={this.addStudentToAttending}\r\n                  />\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"right panel mb-5 mt-5\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              width: \"37%\",\r\n            }}\r\n          >\r\n            <div className=\"controls\" style={{ height: \"80%\" }}>\r\n              <h2 className=\"m-3\">\r\n                {this.state.currentAttendance.length} students selected\r\n              </h2>\r\n\r\n              <p>{this.renderDatePicker()}</p>\r\n              <div>\r\n                <button\r\n                  onClick={() => this.submitAttendance(new Date())}\r\n                  className=\"btn btn-primary btn-lg m-3\"\r\n                >\r\n                  Submit Class\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-primary btn-lg m-2\"\r\n                  onClick={() => (window.location.href = \"/\")}\r\n                >\r\n                  Home\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Students;\r\n","import React, { Component } from \"react\";\r\nimport \"../core.css\";\r\n\r\nclass NewStudentForm extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <form\r\n        method=\"POST\"\r\n        action={\"/api/submit_student?school_id=\" + this.props.school_id}\r\n        className=\"shadow-lg p-3 mb-5 bg-white rounded page container\"\r\n        id=\"newStudnetForm\"\r\n        style={{ textAlign: \"left\" }}\r\n      >\r\n        <h1 style={{ textAlign: \"center\" }}>Enter New Student Details</h1>\r\n        <div\r\n          style={{ paddingLeft: \"5%\", paddingRight: \"5%\", overflow: \"auto\" }}\r\n        >\r\n          <p>\r\n            First Name:\r\n            <input\r\n              name=\"first_name\"\r\n              type=\"text\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n            />\r\n          </p>\r\n          <p>\r\n            Last Name:\r\n            <input\r\n              name=\"last_name\"\r\n              type=\"text\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n            />\r\n          </p>\r\n          <p>\r\n            Date of Birth:\r\n            <input\r\n              name=\"dob\"\r\n              type=\"text\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n            />\r\n          </p>\r\n          <p>\r\n            Phone Number:\r\n            <input\r\n              name=\"phone\"\r\n              type=\"text\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n            />\r\n          </p>\r\n          <p>\r\n            Address:\r\n            <input\r\n              name=\"address\"\r\n              type=\"text\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n            />\r\n          </p>\r\n          <p>\r\n            Email:\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n            />\r\n          </p>\r\n        </div>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-lg m-2\"\r\n            style={{ width: \"20%\" }}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button\r\n            type=\"cancel\"\r\n            className=\"btn btn-danger btn-lg m-2\"\r\n            style={{ width: \"20%\" }}\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              window.location.href = \"/\";\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewStudentForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass StudentSelectionButton extends Component {\r\n  state = {};\r\n\r\n  handleClick = () => {\r\n    this.props.navigateToStudent(this.props.student);\r\n  };\r\n\r\n  checkStyle = () => {\r\n    // let classes = \"btn m-2 \";\r\n    // classes += this.state.selected ? \"btn-success\" : \"btn-outline-dark\";\r\n    // return classes;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li>\r\n        <button onClick={this.handleClick} className=\"btn m-2 btn-outline-dark\">\r\n          {this.props.student.name}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentSelectionButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ClassInformation extends Component {\r\n  state = { acceptClick: true };\r\n\r\n  clickHandler() {}\r\n\r\n  render() {\r\n    const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    let date = new Date(this.props.class.date);\r\n    date =\r\n      days[date.getDay()] +\r\n      \" - \" +\r\n      date.getDate() +\r\n      \"/\" +\r\n      (date.getMonth() + 1) +\r\n      \"/\" +\r\n      date.getFullYear();\r\n\r\n    return (\r\n      <div\r\n        className=\"class info\"\r\n        style={{\r\n          height: \"5vh\",\r\n          display: \"flex\",\r\n          borderBottom: \"1px dashed black\",\r\n          cursor: \"pointer\",\r\n          alignItems: \"center\",\r\n        }}\r\n        onClick={() => {\r\n          if (this.state.acceptClick) {\r\n            this.props.clickHandler(this.props.id);\r\n          }\r\n        }}\r\n      >\r\n        <h5 style={{ maxWidth: \"80%\", width: \"80%\" }}>{date}</h5>\r\n        <h5>{this.props.class.attendees.length}</h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassInformation;\r\n","import React, { Component } from \"react\";\r\nimport ClassInformation from \"../TrendsPage/classInfoComponent\";\r\n\r\nclass StudentInfo extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"left panel\"\r\n        style={{\r\n          minWidth: \"15vw\",\r\n          maxHeight: \"80%\",\r\n        }}\r\n      >\r\n        <h1\r\n          style={{\r\n            textAlign: \"center\",\r\n            overflowX: \"auto\",\r\n            overflowY: \"hidden\",\r\n          }}\r\n        >\r\n          {this.props.student.name}\r\n        </h1>\r\n        {/* <div\r\n          className=\"profile image\"\r\n          style={{\r\n            minWidth: \"15vw\",\r\n            minHeight: \"15vw\",\r\n            border: \"2px dashed red\",\r\n          }}\r\n        >\r\n          student profile image\r\n        </div> */}\r\n\r\n        <ul\r\n          className=\"\"\r\n          style={{\r\n            textAlign: \"center\",\r\n            listStyle: \"none\",\r\n            margin: \"0\",\r\n            padding: \"0\",\r\n          }}\r\n        >\r\n          <li>{this.props.student.dob}</li>\r\n          <li>{this.props.student.phone}</li>\r\n          <li>{this.props.student.grade}</li>\r\n        </ul>\r\n        <h3>Attended Classes</h3>\r\n        <div\r\n          className=\"student attendance mt-3\"\r\n          style={{ maxHeight: \"50vh\", overflow: \"auto\" }}\r\n        >\r\n          {this.props.classes.map((Class) => {\r\n            return <ClassInformation class={Class} acceptClick={false} />;\r\n          })}\r\n        </div>\r\n        <div\r\n          className=\"control panel\"\r\n          style={{ width: \"100%\", textAlign: \"center\" }}\r\n        >\r\n          <button className=\"btn btn-primary btn-lg m-2\">Edit</button>\r\n          <button\r\n            className=\"btn btn-primary btn-lg m-2\"\r\n            onClick={() => (window.location.href = \"/\")}\r\n          >\r\n            Home\r\n          </button>\r\n          <button className=\"btn btn-primary btn-lg m-2\">Back</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentInfo;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nclass Chart extends React.Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n  }\r\n\r\n  state = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: \"#007bff\",\r\n        borderColor: \"rgba(0,0,0,1)\",\r\n        data: [this.props.student, this.props.average],\r\n      },\r\n    ],\r\n    labels: [this.props.name, \"Average\"],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Bar\r\n          data={this.state}\r\n          style={{\r\n            background: \"white\",\r\n            maxHeight: \"25vh\",\r\n            maxWidth: \"80%\",\r\n            marginLeft: \"10%\",\r\n          }}\r\n          options={{\r\n            plugins: {\r\n              title: {\r\n                display: true,\r\n                text: \"Student Attendance vs Average\",\r\n                fontSize: 20,\r\n              },\r\n              legend: { display: false },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Chart;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NoteComponent extends Component {\r\n  state = {};\r\n  formatDate() {\r\n    const date = new Date(this.props.note.date);\r\n    let dt = date.getDate();\r\n    let month = date.getMonth() + 1; //Months are zero based\r\n    const year = date.getFullYear();\r\n\r\n    if (dt < 10) {\r\n      dt = \"0\" + dt;\r\n    }\r\n    if (month < 10) {\r\n      month = \"0\" + month;\r\n    }\r\n    return `${dt}/${month}/${year}`;\r\n  }\r\n\r\n  render() {\r\n    const fullDate = this.formatDate();\r\n    console.log(fullDate);\r\n    return (\r\n      <div\r\n        className=\"note component m-2\"\r\n        style={{\r\n          minHeight: \"10vh\",\r\n          background: \"white\",\r\n          padding: \"5px\",\r\n          paddingRight: \"10px\",\r\n          borderBottom: \"2px dashed black\",\r\n          textAlign: \"justify\",\r\n          textJustify: \"inter-word\",\r\n        }}\r\n      >\r\n        <div className=\"note content\" style={{ overflowY: \"auto\" }}>\r\n          <h5>{this.props.note.content}</h5>\r\n        </div>\r\n        <div\r\n          className=\"note info\"\r\n          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n        >\r\n          {this.props.note.author + \"  -  \" + fullDate}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteComponent;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NoteForm extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <form\r\n        method=\"POST\"\r\n        action={\r\n          \"/api/postNote?school_id=\" +\r\n          this.props.student.school +\r\n          \"&student_id=\" +\r\n          this.props.student.name\r\n        }\r\n        style={{ margin: \"2.5%\" }}\r\n      >\r\n        <textarea\r\n          name=\"content\"\r\n          id=\"noteContent\"\r\n          style={{\r\n            height: \"90%\",\r\n            width: \"100%\",\r\n            border: \"none\",\r\n            overflow: \"auto\",\r\n          }}\r\n          wrap=\"hard\"\r\n          rows=\"9\"\r\n          columns=\"2\"\r\n          placeholder=\"Enter a note here\"\r\n        />\r\n        <p></p>\r\n        <button className=\"btn btn-success\" type=\"submit\">\r\n          Post Note\r\n        </button>\r\n        <button\r\n          className=\"btn btn-danger ml-3\"\r\n          type=\"cancel\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoteForm;\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"../charting/chart\";\r\nimport NoteComponent from \"./NoteComponent\";\r\nimport reactDom from \"react-dom\";\r\nimport NoteForm from \"./notesForm\";\r\n\r\nclass StudentPerformance extends Component {\r\n  state = {};\r\n\r\n  toggleNoteSubmissionPanel() {\r\n    reactDom.render(\r\n      <NoteForm student={this.props.student} />,\r\n      document.querySelector(\".student.notes\")\r\n    );\r\n    console.log(\"attempting to render\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNotes();\r\n  }\r\n  getNotes = async () => {\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ student: this.props.student }),\r\n    };\r\n    const response = await fetch(\"/api/getNotes\", options);\r\n    const notes = await response.json();\r\n    this.setState({ notes: notes.result });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.notes) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"right panel ml-4\" style={{ textAlign: \"center\" }}>\r\n        <h1>Attendance</h1>\r\n        <div\r\n          className=\"attendance graph\"\r\n          style={{\r\n            maxHeight: \"35%\",\r\n          }}\r\n        >\r\n          <Chart\r\n            name={this.props.student.name}\r\n            student={this.props.studentAttendance}\r\n            average={this.props.averageAttendancePerStudent}\r\n          />\r\n        </div>\r\n        <h1>Notes</h1>\r\n        <div\r\n          className=\"student notes mb-5\"\r\n          style={{\r\n            border: \"1px solid black\",\r\n            height: \"30vh\",\r\n            // maxWidth: \"40vw\",\r\n            width: \"35vw\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"notes content m-2\"\r\n            style={{ height: \"75%\", overflowY: \"auto\" }}\r\n          >\r\n            {this.state.notes.map((note) => (\r\n              <NoteComponent note={note} />\r\n            ))}\r\n          </div>\r\n          <div className=\"control panel\">\r\n            <button\r\n              className=\"btn btn-primary m-2\"\r\n              onClick={() => this.toggleNoteSubmissionPanel()}\r\n            >\r\n              Add Note\r\n            </button>\r\n            <button className=\"btn btn-primary m-2\">Edit Notes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentPerformance;\r\n","import React, { Component } from \"react\";\r\nimport StudentInfo from \"./StudentInfo\";\r\nimport StudentPerformance from \"./StudentPerformance\";\r\n\r\nclass StudentDetails extends Component {\r\n  state = {};\r\n\r\n  getStudentAttendance = async () => {\r\n    //Set parameters\r\n    const school_id = this.props.student.school;\r\n    const full_name = this.props.student.name;\r\n    let totalAttendance = 0;\r\n\r\n    //Set options and make calls to api\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ school: school_id, name: full_name }),\r\n    };\r\n    //make API calls\r\n    const studentResponse = await fetch(\"/api/getStudentAttendance\", options);\r\n    const studentAttendance = await studentResponse.json();\r\n    const fullResponse = await fetch(\"/api/getFullAttendance\", options);\r\n    const fullAttendance = await fullResponse.json();\r\n\r\n    //Calculate total attendance across all classes\r\n    fullAttendance.result.forEach((lesson) => {\r\n      totalAttendance += lesson.attendees.length;\r\n    });\r\n    //Calculate average attendace per student\r\n    const averageAttendancePerStudent =\r\n      totalAttendance / this.props.totalStudents;\r\n\r\n    this.setState({\r\n      studentAttendance: studentAttendance.result.length,\r\n      averageAttendancePerStudent: averageAttendancePerStudent,\r\n      attendedClasses: fullAttendance.result,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getStudentAttendance();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.studentAttendance) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div\r\n        className=\"page container shadow-lg p-3 mb-5 bg-white rounded\"\r\n        style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"10%\" }}\r\n      >\r\n        <StudentInfo\r\n          student={this.props.student}\r\n          classes={this.state.attendedClasses}\r\n        />\r\n        <StudentPerformance\r\n          student={this.props.student}\r\n          studentAttendance={this.state.studentAttendance}\r\n          averageAttendancePerStudent={this.state.averageAttendancePerStudent}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentDetails;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Student from \"../NewClassPage/student\";\r\nimport StudentSelectionButton from \"./StudentSelectionButton\";\r\nimport StudentDetails from \"./StudentDetails\";\r\n\r\nclass StudentSelection extends Component {\r\n  state = {};\r\n\r\n  navigateToStudent = (student) => {\r\n    ReactDOM.render(\r\n      <StudentDetails\r\n        student={student}\r\n        totalStudents={this.props.students.length}\r\n      />,\r\n      document.querySelector(\".container\")\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"page container shadow-lg p-3 mb-5 bg-white rounded\"\r\n        style={{ display: \"flex\", flexDirection: \"row\", maxWidth: \"60vh\" }}\r\n      >\r\n        <div\r\n          className=\"left panel\"\r\n          style={{\r\n            maxHeight: \"80%\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <h1\r\n            style={{\r\n              textAlign: \"center\",\r\n              overflowX: \"auto\",\r\n              overflowY: \"hidden\",\r\n            }}\r\n          >\r\n            Select a Student\r\n          </h1>\r\n          <ul\r\n            style={{\r\n              listStyle: \"none\",\r\n              textAlign: \"center\",\r\n              paddingLeft: \"0px\",\r\n              maxHeight: \"60vh\",\r\n              overflowY: \"auto\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            {this.props.students.map((student) => (\r\n              <StudentSelectionButton\r\n                student={student}\r\n                navigateToStudent={this.navigateToStudent}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <div\r\n            className=\"control panel\"\r\n            style={{ width: \"100%\", textAlign: \"center\" }}\r\n          >\r\n            <button className=\"btn btn-primary btn-lg m-2\">Edit</button>\r\n            <button\r\n              className=\"btn btn-primary btn-lg m-2\"\r\n              onClick={() => (window.location.href = \"/\")}\r\n            >\r\n              Home\r\n            </button>\r\n            <button className=\"btn btn-primary btn-lg m-2\">Back</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentSelection;\r\n","import React, { Component } from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport StudentDetails from \"../studentPage/StudentDetails\";\r\n\r\nclass StudentTrend extends Component {\r\n  state = {};\r\n\r\n  clickHandler() {\r\n    console.log(this.props.student.name);\r\n    //prevent click through to student page from info -> classes -> attendees. aim to add later\r\n    if (this.props.displayAttendance !== false) {\r\n      reactDom.render(\r\n        <StudentDetails\r\n          student={this.props.student}\r\n          totalStudents={this.props.totalStudents}\r\n        />,\r\n        document.querySelector(\".container\")\r\n      );\r\n    }\r\n  }\r\n\r\n  checkDisplay() {\r\n    if (this.props.displayAttendance !== false) {\r\n      return (\r\n        <h5>{Math.round(100 * this.props.attendancePercentage) / 100}%</h5>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let studentName;\r\n    if (typeof this.props.student === \"string\") {\r\n      studentName = this.props.student;\r\n    } else {\r\n      studentName = this.props.student.name;\r\n    }\r\n    return (\r\n      <div\r\n        className=\"student info\"\r\n        style={{\r\n          height: \"5vh\",\r\n          display: \"flex\",\r\n          borderBottom: \"1px dashed black\",\r\n          cursor: \"pointer\",\r\n          alignItems: \"center\",\r\n        }}\r\n        onClick={() => this.clickHandler()}\r\n      >\r\n        <h5 style={{ maxWidth: \"80%\", width: \"80%\" }}>{studentName}</h5>\r\n        {this.checkDisplay()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default StudentTrend;\r\n","import React, { Component } from \"react\";\r\nimport NewStudentForm from \"./NewSudentForm\";\r\nimport ReactDOM from \"react-dom\";\r\nimport StudentSelection from \"../studentPage/StudentSelection\";\r\n\r\nclass AdminPage extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"startPageContainer shadow-lg p-3 mb-5 bg-white rounded\"\r\n        style={{\r\n          marginTop: \"15%\",\r\n          padding: \"15px\",\r\n          border: \"2px solid black\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <h1 className=\"m-3\" style={{ textAlign: \"center\" }}>\r\n          Admin Options\r\n        </h1>\r\n        <button\r\n          className=\"btn btn-primary btn-lg m-2\"\r\n          onClick={() =>\r\n            ReactDOM.render(\r\n              <NewStudentForm school_id={this.props.school.schoolID} />,\r\n              document.querySelector(\".container\")\r\n            )\r\n          }\r\n        >\r\n          New Student\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary btn-lg m-2\"\r\n          onClick={() =>\r\n            ReactDOM.render(\r\n              <StudentSelection\r\n                students={this.props.students}\r\n                school={this.props.school}\r\n              />,\r\n              document.querySelector(\".container\")\r\n            )\r\n          }\r\n        >\r\n          View/Edit Student\r\n        </button>\r\n        <button className=\"btn btn-light btn-lg m-2\">\r\n          Edit Existing Class (light button = non-urgent)\r\n        </button>\r\n        <button className=\"btn btn-light btn-lg m-2\">Grading</button>\r\n\r\n        <button\r\n          className=\"btn btn-secondary btn-lg mt-4\"\r\n          onClick={() => (window.location.href = \"/\")}\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminPage;\r\n","import React, { Component } from \"react\";\r\nimport StudentTrend from \"./StudentInfoComponent\";\r\nimport ClassInformation from \"./classInfoComponent\";\r\n\r\nclass StudentsOverview extends Component {\r\n  state = { students: this.props.students };\r\n\r\n  render() {\r\n    //prevent render attempt until full attendance is retrieved - edit to return empty loading page instead of nothing\r\n    if (this.props.fullAttendanceArray === undefined) {\r\n      return null;\r\n    } else {\r\n      //render different views based on the value of display\r\n      switch (this.props.display) {\r\n        case \"Students\":\r\n          return (\r\n            <div>\r\n              <div\r\n                className=\"students overview ml-2\"\r\n                style={{\r\n                  height: \"45vh\",\r\n                  overflowY: \"auto\",\r\n                  paddingRight: \"10px\",\r\n                }}\r\n              >\r\n                {this.props.students.map((student, i) => {\r\n                  return (\r\n                    <StudentTrend\r\n                      student={student}\r\n                      attendancePercentage={\r\n                        this.props.fullAttendanceArray[student.name]\r\n                      }\r\n                      totalStudents={this.props.students.length}\r\n                      key={i}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n        case \"Single\":\r\n          return (\r\n            <div>\r\n              <div\r\n                className=\"students overview ml-2\"\r\n                style={{\r\n                  height: \"45vh\",\r\n                  overflowY: \"auto\",\r\n                  paddingRight: \"10px\",\r\n                }}\r\n              >\r\n                {this.props.classList[this.props.classKey].attendees.map(\r\n                  (student, i) => {\r\n                    return (\r\n                      <StudentTrend\r\n                        student={student}\r\n                        attendancePercentage={\"\"}\r\n                        // totalStudents={this.props.students.length}\r\n                        key={i}\r\n                        displayAttendance={false}\r\n                      />\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        case \"Classes\":\r\n          return (\r\n            <div>\r\n              <div\r\n                className=\"students overview ml-2\"\r\n                style={{\r\n                  height: \"45vh\",\r\n                  overflowY: \"auto\",\r\n                  paddingRight: \"10px\",\r\n                }}\r\n              >\r\n                {this.props.classList.map((Class, i) => {\r\n                  return (\r\n                    <ClassInformation\r\n                      class={Class}\r\n                      key={i}\r\n                      id={i}\r\n                      clickHandler={() => this.props.classClickHandler(i)}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default StudentsOverview;\r\n","import React, { Component } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nclass ClassAttendanceGraph extends Component {\r\n  componentDidMount() {}\r\n\r\n  state = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: \"#007bff\",\r\n        borderColor: \"rgba(0,0,0,1)\",\r\n        data: this.props.counts,\r\n      },\r\n    ],\r\n    labels: [],\r\n  };\r\n\r\n  render() {\r\n    //Nicely format dates before passing them to state for graphing\r\n    if (this.state.labels.length === 0) {\r\n      let formattedDates = [];\r\n      this.props.dates.forEach((date) => {\r\n        date =\r\n          date.getDate() +\r\n          \"/\" +\r\n          (date.getMonth() + 1) +\r\n          \"/\" +\r\n          date.getFullYear();\r\n        formattedDates.push(date);\r\n      });\r\n      this.setState({ labels: formattedDates });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Bar\r\n          data={this.state}\r\n          style={{\r\n            background: \"white\",\r\n            margin: \"3%\",\r\n          }}\r\n          options={{\r\n            plugins: {\r\n              legend: { display: false },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ClassAttendanceGraph;\r\n","import React, { Component } from \"react\";\r\nimport StudentsOverview from \"./StudentsOverview\";\r\nimport ClassAttendanceGraph from \"../charting/classAttendanceGraph\";\r\n\r\nclass TrendsPage extends Component {\r\n  state = {\r\n    students: this.props.students,\r\n    display: \"Students\",\r\n    graphPeriod: 1,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    //set options for api calls\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        students: this.props.students,\r\n        school: this.props.school.schoolID,\r\n      }),\r\n    };\r\n\r\n    //retrieve list of all classes from DB\r\n    const allClasses = await fetch(\"/api/getFullAttendance\", options);\r\n    const fullClassList = await allClasses.json();\r\n    console.log(\"here are all your classes: \", fullClassList.result);\r\n\r\n    //retrieve attendance % for each student in the school\r\n    const attendances = await fetch(\r\n      \"/api/calculateFullAttendancePercentages\",\r\n      options\r\n    );\r\n    const fullAttendanceArray = await attendances.json();\r\n\r\n    //set values to state\r\n    this.setState({\r\n      classList: fullClassList.result,\r\n      fullAttendanceArray: fullAttendanceArray.result,\r\n      loaded: true,\r\n    });\r\n\r\n    const graphData = this.generateAttendanceGraphDataSet();\r\n    console.log(graphData);\r\n  };\r\n\r\n  setGraphPeriod(period) {\r\n    this.setState({ graphPeriod: period });\r\n  }\r\n\r\n  generateAttendanceGraphDataSet = () => {\r\n    const classList = this.state.classList;\r\n    let dates = [];\r\n    let counts = [];\r\n    let date;\r\n    classList.forEach((Class) => {\r\n      date = new Date(Class.date);\r\n\r\n      dates.push(date);\r\n      counts.push(Class.attendees.length);\r\n    });\r\n    this.setState({ dates: dates, counts: counts });\r\n  };\r\n\r\n  classClickHandler = (classKey) => {\r\n    console.log(\"clicked: \" + classKey + typeof classKey);\r\n    this.setState({ classKey: classKey, display: \"Single\" });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.dates === undefined) {\r\n      return null;\r\n    } else {\r\n      //calculate date to start graph from\r\n      let filterDate = new Date();\r\n      filterDate.setMonth(filterDate.getMonth() - this.state.graphPeriod);\r\n\r\n      let filteredCount = [];\r\n\r\n      //filter dates and counts for graphing purposes\r\n      const filteredDates = this.state.dates.filter((date, i) => {\r\n        let classDate = new Date(date);\r\n        if (classDate > filterDate) {\r\n          filteredCount.push(this.state.counts[i]);\r\n        } else {\r\n          console.log(classDate);\r\n        }\r\n        return classDate > filterDate;\r\n      });\r\n      return (\r\n        <div\r\n          className=\"start page container shadow-lg p-3 mb-5 bg-white rounded\"\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            marginTop: \"10%\",\r\n            height: \"65vh\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"left panel\"\r\n            style={{ minHeight: \"45vh\", width: \"25%\" }}\r\n          >\r\n            <h2\r\n              style={{ textAlign: \"center\", cursor: \"pointer\" }}\r\n              onClick={() => (window.location.href = \"/\")}\r\n            >\r\n              {this.props.school.name}\r\n            </h2>\r\n            <div className=\"filters panel ml-3\" style={{ textAlign: \"center\" }}>\r\n              <button\r\n                className=\"btn btn-sm btn-outline-primary  m-2\"\r\n                onClick={() => this.setState({ display: \"Students\" })}\r\n              >\r\n                Students\r\n              </button>\r\n              <button\r\n                className=\"btn btn-sm btn-outline-primary m-2\"\r\n                onClick={() => this.setState({ display: \"Classes\" })}\r\n              >\r\n                Classes\r\n              </button>\r\n            </div>\r\n            <StudentsOverview\r\n              students={this.state.students}\r\n              school={this.props.school}\r\n              display={this.state.display}\r\n              classList={this.state.classList}\r\n              fullAttendanceArray={this.state.fullAttendanceArray}\r\n              graphData={this.state.graphData}\r\n              classKey={this.state.classKey}\r\n              classClickHandler={(classKey) => this.classClickHandler(classKey)}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"right panel\"\r\n            style={{ width: \"75%\", height: \"75vh\", textAlign: \"center\" }}\r\n          >\r\n            <h2>Attendance over past {this.state.graphPeriod} months</h2>\r\n            <ClassAttendanceGraph\r\n              dates={filteredDates.reverse()}\r\n              counts={filteredCount.reverse()}\r\n            />\r\n            <div className=\"controls panel\">\r\n              <button\r\n                className=\"btn btn-outline-success btn-lg m-2\"\r\n                onClick={() => this.setGraphPeriod(1)}\r\n              >\r\n                1 Month\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-success btn-lg m-2\"\r\n                onClick={() => this.setGraphPeriod(3)}\r\n              >\r\n                3 Months\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-success btn-lg m-2\"\r\n                onClick={() => this.setGraphPeriod(6)}\r\n              >\r\n                6 Months\r\n              </button>\r\n              <button\r\n                className=\"btn btn-outline-success btn-lg m-2\"\r\n                onClick={() => this.setGraphPeriod(12)}\r\n              >\r\n                12 Months\r\n              </button>\r\n              <button\r\n                className=\"btn btn-primary btn-lg m-2\"\r\n                onClick={() => (window.location.href = \"/\")}\r\n              >\r\n                Home\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default TrendsPage;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Students from \"../NewClassPage/students\";\r\nimport AdminPage from \"../AdminPage/AdminPage\";\r\nimport NewStudentForm from \"../AdminPage/NewSudentForm\";\r\nimport TrendsPage from \"../TrendsPage/TrendsPage\";\r\nimport \"../core.css\";\r\n\r\nclass StartPage extends Component {\r\n  state = {\r\n    isHidden: false,\r\n  };\r\n\r\n  navigateToNewClass = () => {\r\n    console.log(\"Navigated to New Class\");\r\n    ReactDOM.render(\r\n      <Students students={this.props.students} />,\r\n      document.querySelector(\".container\")\r\n    );\r\n  };\r\n\r\n  navigateToTrends = () => {\r\n    console.log(\"Navigated to Trends\");\r\n    ReactDOM.render(\r\n      <TrendsPage students={this.props.students} school={this.props.school} />,\r\n      document.querySelector(\".container\")\r\n    );\r\n  };\r\n  navigateToNewStudent = () => {\r\n    console.log(\"Navigated to Admin\");\r\n    ReactDOM.render(\r\n      <NewStudentForm school_id={this.props.school.schoolID} />,\r\n      document.querySelector(\".container\")\r\n    );\r\n    // ReactDOM.render(\r\n    //   <AdminPage students={this.props.students} school={this.props.school} />,\r\n    //   document.querySelector(\".container\")\r\n    // );\r\n  };\r\n  logOut = () => {\r\n    document.cookie = \"school_id=;expires=Thu, 01 Jan 1970 00:00:00 GMT\";\r\n    setTimeout(() => {\r\n      window.location.href = \"/\";\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"start page container shadow-lg p-3 mb-5 bg-white rounded\"\r\n        // style={{ marginTop: \"15%\" }}\r\n      >\r\n        <h1 className=\"m-3\" style={{ textAlign: \"center\" }}>\r\n          Welcome to {this.props.school.name}\r\n          <br />\r\n          What would you like to do?\r\n        </h1>\r\n        <button\r\n          className=\"btn btn-primary btn-lg m-3\"\r\n          onClick={this.navigateToNewClass}\r\n          style={{ width: \"50%\", alignSelf: \"center\" }}\r\n        >\r\n          Start a Class\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary btn-lg m-3\"\r\n          onClick={this.navigateToTrends}\r\n          style={{ width: \"50%\", alignSelf: \"center\" }}\r\n        >\r\n          View Trends\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary btn-lg m-3\"\r\n          onClick={this.navigateToNewStudent}\r\n          style={{ width: \"50%\", alignSelf: \"center\" }}\r\n        >\r\n          Add New Student\r\n        </button>\r\n        <button\r\n          className=\"btn btn-danger btn-lg m-3\"\r\n          onClick={this.logOut}\r\n          style={{ width: \"25%\", alignSelf: \"center\" }}\r\n        >\r\n          Log Out\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StartPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NewSchoolForm extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <form\r\n        method=\"POST\"\r\n        action=\"/api/addNewSchool\"\r\n        className=\"shadow-lg p-3 mb-5 bg-white rounded page container\"\r\n        id=\"newSchoolForm\"\r\n        style={{ marginTop: \"10%\" }}\r\n      >\r\n        <div\r\n          style={{ paddingLeft: \"5%\", paddingRight: \"5%\", textAlign: \"left\" }}\r\n        >\r\n          <h1 style={{ textAlign: \"center\" }}>Welcome</h1>\r\n          <p>\r\n            Name of School:\r\n            <input\r\n              name=\"school_name\"\r\n              type=\"text\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n              required=\"true\"\r\n            />\r\n          </p>\r\n          <p>\r\n            Email:\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n              required=\"true\"\r\n            />\r\n          </p>\r\n          <p>\r\n            First Name:\r\n            <input\r\n              name=\"first_name\"\r\n              type=\"text\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n              required=\"true\"\r\n            />\r\n          </p>\r\n          <p>\r\n            Last Name:\r\n            <input\r\n              name=\"last_name\"\r\n              type=\"text\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n              required=\"true\"\r\n            />\r\n          </p>\r\n          <p>\r\n            Phone (Optional):\r\n            <input\r\n              name=\"phone\"\r\n              type=\"tel\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n            />\r\n          </p>\r\n          <p>\r\n            Postcode (Optional):\r\n            <input\r\n              name=\"postcode\"\r\n              type=\"number\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n            />\r\n          </p>\r\n          <p>\r\n            Password:\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              style={{ width: \"100%\" }}\r\n              class=\"form-control\"\r\n              required=\"true\"\r\n              minLength=\"8\"\r\n              maxLength=\"30\"\r\n            />\r\n          </p>\r\n        </div>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-lg m-2\"\r\n            style={{ width: \"20%\" }}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger btn-lg m-2\"\r\n            style={{ width: \"20%\" }}\r\n            onClick={() => (window.location.href = \"/\")}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewSchoolForm;\r\n","import React, { Component } from \"react\";\r\nimport reactDom from \"react-dom\";\r\nimport \"../core.css\";\r\nimport NewSchoolForm from \"../newSchoolPage/newSchoolForm\";\r\n\r\nclass LoginPanel extends Component {\r\n  state = { display: \"Login\" };\r\n\r\n  createAccount(e) {\r\n    e.preventDefault();\r\n    reactDom.render(<NewSchoolForm />, document.querySelector(\".container\"));\r\n  }\r\n\r\n  render() {\r\n    if (this.props.display && this.props.display !== this.state.display) {\r\n      this.setState({ display: this.props.display });\r\n    }\r\n\r\n    switch (this.state.display) {\r\n      case \"Login\":\r\n        return (\r\n          <form\r\n            method=\"POST\"\r\n            action=\"/api/login\"\r\n            className=\"shadow-lg p-3 mb-5 bg-white rounded page container\"\r\n            id=\"newStudnetForm\"\r\n            style={{\r\n              marginTop: \"20%\",\r\n              width: \"30%\",\r\n              paddingLeft: \"5%\",\r\n              paddingRight: \"5%\",\r\n            }}\r\n          >\r\n            <div style={{ textAlign: \"left\", margin: \"5%\" }}>\r\n              <h1 style={{ textAlign: \"center\" }}>Login</h1>\r\n              <p>\r\n                Email:\r\n                <input\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  style={{ width: \"100%\" }}\r\n                  class=\"form-control\"\r\n                />\r\n              </p>\r\n              <p>\r\n                Password:\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  style={{ width: \"100%\" }}\r\n                  class=\"form-control\"\r\n                />\r\n                <a\r\n                  class=\"hyperlink\"\r\n                  onClick={() => this.setState({ display: \"Reset\" })}\r\n                >\r\n                  Forgot your password?\r\n                </a>\r\n              </p>\r\n              <div\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success mt-3\"\r\n                  onClick={this.login}\r\n                >\r\n                  Submit\r\n                </button>\r\n                <button\r\n                  type=\"cancel\"\r\n                  className=\"btn btn-secondary mt-3\"\r\n                  onClick={this.createAccount}\r\n                >\r\n                  Create Account\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        );\r\n      // ~~~~~~~~~~~~~~~~~~~~~ SUBMIT RESET PASSWORD REQUEST ~~~~~~~~~~~~~~~~~~~~~\r\n      case \"Reset\":\r\n        return (\r\n          <form\r\n            method=\"POST\"\r\n            action=\"/api/sendTestEmail\"\r\n            className=\"shadow-lg p-3 mb-5 bg-white rounded page container\"\r\n            id=\"newStudnetForm\"\r\n            style={{\r\n              marginTop: \"20%\",\r\n              width: \"30%\",\r\n              paddingLeft: \"5%\",\r\n              paddingRight: \"5%\",\r\n            }}\r\n          >\r\n            <div>\r\n              <h1 style={{ textAlign: \"center\" }}>Reset Password</h1>\r\n              <p>Enter your email below to receive a password reset email</p>\r\n              <p>\r\n                Email:\r\n                <input\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  style={{ width: \"100%\" }}\r\n                  class=\"form-control\"\r\n                />\r\n                <a\r\n                  class=\"hyperlink\"\r\n                  onClick={() => this.setState({ display: \"Login\" })}\r\n                >\r\n                  Back to sign in\r\n                </a>\r\n              </p>\r\n            </div>\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success mt-3\"\r\n                onClick={this.login}\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        );\r\n      // ~~~~~~~~~~~~~~~~~~~~~ PASSWORD ONLY FOR RESET ~~~~~~~~~~~~~~~~~~~~~\r\n      case \"Password\":\r\n        const params = new URLSearchParams(window.location.search);\r\n        const token = params.get(\"token\");\r\n        return (\r\n          <form\r\n            method=\"POST\"\r\n            action={`/api/updateUserPassword?token=${token}`}\r\n            className=\"shadow-lg p-3 mb-5 bg-white rounded page container\"\r\n            id=\"newStudnetForm\"\r\n            style={{\r\n              marginTop: \"20%\",\r\n              width: \"30%\",\r\n              paddingLeft: \"5%\",\r\n              paddingRight: \"5%\",\r\n            }}\r\n          >\r\n            <div>\r\n              <h1 style={{ textAlign: \"center\" }}>Reset Password</h1>\r\n              <p>Enter your new password below</p>\r\n              <p>\r\n                Password:\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  style={{ width: \"100%\" }}\r\n                  class=\"form-control\"\r\n                  minLength=\"8\"\r\n                />\r\n              </p>\r\n            </div>\r\n            <div\r\n              style={{\r\n                textAlign: \"center\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-success mt-3\"\r\n                onClick={this.login}\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default LoginPanel;\r\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/navbar\";\r\nimport StartPage from \"./components/StartPage/StartPage\";\r\nimport LoginPanel from \"./components/loginPanel/loginPanel\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    school: {},\r\n    students: [],\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.getSchool();\r\n    this.fetchStudents();\r\n    this.resetPassword();\r\n  };\r\n\r\n  resetPassword = async () => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const token = params.get(\"token\");\r\n    console.log(token);\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ token: token }),\r\n    };\r\n    if (token) {\r\n      await fetch(\"/api/resetPassword\", options);\r\n      this.setState({ display: \"Password\" });\r\n    }\r\n  };\r\n\r\n  fetchStudents() {\r\n    fetch(\"/api/getStudents\")\r\n      .then(async (res) => {\r\n        const response = await res.json();\r\n        return this.setState({ students: response.result });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  getSchool = async () => {\r\n    console.log(\"getting school\");\r\n    let school_id;\r\n    if (document.cookie.length == 0) {\r\n      console.log(\"cookie length = 0\");\r\n      return;\r\n    } else {\r\n      school_id = document.cookie.split(\"school_id=\")[1].split(\"=\")[0];\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ school_id: school_id }),\r\n      };\r\n\r\n      const school = await fetch(\"/api/getSchool\", options);\r\n\r\n      let finalSchool = await school.json();\r\n      finalSchool = finalSchool.result[0];\r\n\r\n      return this.setState({ school: finalSchool });\r\n    }\r\n  };\r\n\r\n  generateContent = async () => {\r\n    switch (\r\n      this.state.display\r\n      //switch content based on display value, return JSX for the components\r\n      //in render(), return all base content (navbar etc) + call this function to determine content\r\n    ) {\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (document.cookie.length === 0) {\r\n      if (this.state.display === \"Password\") {\r\n        return (\r\n          <React.Fragment>\r\n            <NavBar />\r\n            <main className=\"container\">\r\n              <LoginPanel display={\"Password\"} />\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n      console.log(\"no cookie exists\");\r\n      return (\r\n        <React.Fragment>\r\n          <NavBar />\r\n          <main className=\"login container\">\r\n            <LoginPanel />\r\n          </main>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <NavBar />\r\n          <main className=\"container\">\r\n            <StartPage\r\n              school={this.state.school}\r\n              students={this.state.students}\r\n            />\r\n          </main>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\"\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"))"],"sourceRoot":""}